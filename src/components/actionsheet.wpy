<style lang="scss">
@import '../espui/btn.scss';
@import '../espui/common';

.esp-actionsheet {
  background-color: #f8f8f8;
}

.esp-actionsheet-mask {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 10;
  background: rgba(0, 0, 0, 0.7);
  display: none;
}

.esp-actionsheet-container {
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
  background: $background-color;
  transform: translate3d(0, 50%, 0);
  transform-origin: center;
  transition: all 0.2s ease;
  z-index: 11;
  opacity: 0;
  visibility: hidden;
}

.esp-actionsheet-btn.esp-btn {
  height: 50px;
  line-height: 50px;
  margin-bottom: 0;

  &::after {
    border-width: 0;
    border-bottom-width: 1px;
  }
}

.esp-actionsheet-btn.esp-btn:last-child {
  &::after {
    border-bottom-width: 0;
  }
}

.esp-actionsheet-subname {
  margin-left: 2px;
  font-size: 12px;
  color: $gray-darker;
}

.esp-actionsheet-footer {
  margin-top: 10px;
}

/* btn-loading 状态 */
.esp-actionsheet-btn.esp-btn-loading .esp-actionsheet-subname {
  color: transparent;
}

/* esp-actionsheet 展示出来的样式 */
.esp-actionsheet-show .esp-actionsheet-container {
  opacity: 1;
  transform: translate3d(0, 0, 0);
  visibility: visible;
}
.esp-actionsheet-show .esp-actionsheet-mask {
  display: block;
}
</style>

<template>
  <view class="esp-actionsheet {{ espActionsheet.show ? '.esp-actionsheet-show' : '' }}">
    <view
      class="esp-actionsheet-mask"
      @tap.stop="handleespActionsheetMaskClick"
      data-close-on-click-overlay="{{ espActionsheet.closeOnClickOverlay }}"
      data-component-id="{{ componentId }}"></view>
    <view class="esp-actionsheet-container">
      <!-- 实际按钮显示 -->
      <button
        wx:for="{{ espActionsheet.actions }}"
        wx:for-index="index"
        wx:for-item="item"
        wx:key="{{ index }}-{{ item.name }}"
        @tap.stop="handleespActionsheetBtnClick"
        data-component-id="{{ componentId }}"
        data-index="{{ index }}"
        data-type="{{ item.type }}"
        open-type="{{ item.openType }}"
        class="esp-btn esp-actionsheet-btn {{ item.loading ? 'esp-btn-loading' : '' }} {{ item.className }}"
      >
        <text>{{ item.name }}</text>
        <text
          wx:if="{{ item.subname }}"
          class="esp-actionsheet-subname">{{ item.subname }}</text>
      </button>

      <!-- 关闭按钮 -->
      <view
        wx:if="{{ espActionsheet.cancelText }}"
        class="esp-actionsheet-footer"
      >
        <button
          class="esp-btn esp-actionsheet-btn"
          @tap.stop="handleespActionsheetCancelBtnClick"
          data-component-id="{{ componentId }}"
        >{{ espActionsheet.cancelText }}</button>
      </view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'

export default class Actionsheet extends wepy.component {
  props = {
    componentId: String
  }
  data = {
    espActionsheet: {}
  }
  methods = {
    showespActionsheet(options = {}, e) {
      const {
        cancelText = '关闭 Action',
        closeOnClickOverlay = true,
        actions = [
          {
            type: '1',
            name: '选项1',
            subname: '选项描述语1',
            className: 'action-class',
            loading: false
          },
          {
            type: '2',
            name: '选项2',
            subname: '选项描述语2',
            className: 'action-class',
            loading: false
          },
          {
            type: 'share',
            name: '去分享',
            openType: 'share'
          }
        ]
      } = options
      return new Promise((resolve, reject) => {
        this.espActionsheet = {
          show: true,
          cancelText,
          closeOnClickOverlay,
          actions,
          // 回调钩子
          resolve,
          reject
        }
        this.$apply()
      })
    },
    resolveCancelClick() {
      const espActionsheetData = this.espActionsheet || {}
      const { reject } = espActionsheetData

      console.info('[esp:actionsheet:cancel]')
      this.espActionsheet.show = false
      this.$apply()
      reject({
        type: 'cancel'
      })
    },
    handleespActionsheetMaskClick({ currentTarget = {} }) {
      const dataset = currentTarget.dataset || {}
      const { closeOnClickOverlay } = dataset

      // 判断是否在点击背景时需要关闭弹层
      if (!closeOnClickOverlay) {
        return
      }

      this.methods.resolveCancelClick.call(this)
    },

    handleespActionsheetCancelBtnClick(e) {
      this.methods.resolveCancelClick.call(this)
    },

    handleespActionsheetBtnClick({ currentTarget = {} }) {
      const espActionsheetData = this.espActionsheet || {}
      const { resolve } = espActionsheetData
      const dataset = currentTarget.dataset || {}
      const { index, type } = dataset
      const action = this.espActionsheet.actions[index]

      // 如果是分享按钮被点击, 不处理关闭
      if (type === 'share') {
        return
      }

      if (action.asyncJob) {
        action.loading = true
        this.$apply()

        action
          .asyncJob()
          .then(e => {
            this.espActionsheet.show = false
            action.loding = false
            this.$apply()
          })
          .catch(e => {
            action.loding = false
            this.$apply()
          })
      } else {
        this.espActionsheet.show = false
        action.loding = false
      }
      this.$apply()
      resolve(action)
    }
  }
  computed = {}
}
</script>
