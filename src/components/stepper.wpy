<style lang="less">
.emp-stepper {
  color: #666;
}

.emp-stepper view {
  display: inline-block;
  line-height: 20px;
  padding: 5px 0;
  text-align: center;
  min-width: 40px;
  box-sizing: border-box;
  vertical-align: middle;
  font-size: 12px;
  border: 1rpx solid #999;
}

.emp-stepper .emp-stepper-minus {
  border-right: none;
  border-radius: 2px 0 0 2px;
}

.emp-stepper .emp-stepper-text {
  border: 1rpx solid #999;
  display: inline-block;
  text-align: center;
  vertical-align: middle;
  height: 30px;
  width: 40px;
  font-size: 12px;
  line-height: 30px;
}

.emp-stepper .emp-stepper-plus {
  border-left: none;
  border-radius: 0 2px 2px 0;
}

.emp-stepper .emp-stepper-disabled {
  background: #f8f8f8;
  color: #bbb;
  border-color: #e8e8e8;
}

.emp-stepper-small view {
  min-width: 36px;
  line-height: 18px;
}

.emp-stepper-small .emp-stepper-text {
  width: 36px;
  line-height: 28px;
  height: 28px;
}
</style>
<template>
  <view class="emp-stepper {{ size === 'small' ? 'emp-stepper-small' : '' }}">
    <view class="emp-stepper-minus {{ stepper <= min ? 'emp-stepper-disabled' : '' }}" data-component-id="{{ componentId }}" data-stepper="{{ stepper }}" data-disabled="{{ stepper <= min }}" bindtap="handleEmpStepperMinus">-</view>
    <input class="emp-stepper-text {{ min >= max ? 'emp-stepper-disabled' : '' }}" type="number" data-component-id="{{ componentId }}" data-min="{{ min }}" data-max="{{ max }}" value="{{ stepper }}" disabled="{{ min >= max }}" bindblur="handleEmpStepperBlur"></input>
    <view class="emp-stepper-plus {{ stepper >= max ? 'emp-stepper-disabled' : '' }}" data-component-id="{{ componentId }}" data-stepper="{{ stepper }}" data-disabled="{{ stepper >= max }}" bindtap="handleEmpStepperPlus">+</view>
  </view>
</template>
<script>
import wepy from 'wepy'

export default class Stepper extends wepy.component {
  props = {
    stepper: {
      type: Number,
      default: 0
    },
    min: {
      type: Number,
      default: 0
    },
    max: {
      type: Number,
      default: 0
    },
    size: {
      type: String,
      default: ''
    },
    componentId: String
  }
  data = {}
  methods = {
    handleEmpStepperMinus(e) {
      this.handle(e, -1)
    },

    handleEmpStepperPlus(e) {
      this.handle(e, +1)
    },

    handleEmpStepperBlur(e) {
      let dataset = e.currentTarget.dataset
      let componentId = dataset.componentId
      let max = +dataset.max
      let min = +dataset.min
      let value = e.detail.value

      if (!value) {
        setTimeout(() => {
          this.callback(componentId, min)
        }, 16)
        this.callback(componentId, value)
        return '' + value
      }

      value = +value
      if (value > max) {
        value = max
      } else if (value < min) {
        value = min
      }

      this.callback(componentId, value)

      return '' + value
    }
  }

  handle(e, num) {
    let dataset = e.currentTarget.dataset
    let componentId = dataset.componentId
    let disabled = dataset.disabled
    let stepper = +dataset.stepper

    if (disabled) return null

    this.callback(componentId, stepper + num)
  }

  callback(componentId, stepper) {
    stepper = +stepper
    let e = { componentId, stepper }
    console.info('[emp:stepper:change]', e)

    this.$emit('empStepperChange', e)
  }
}
</script>
