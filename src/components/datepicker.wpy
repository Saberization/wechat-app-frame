<style>
.picker-visible {
  height: 236px;
  bottom: 0;
}

picker-view-column.year-view-column {
  width: 50px;
  flex: 2;
}
picker-view-column {
  width: 30px;
  text-align: center;
}
.hidden {
  display: none;
}
.view-column-tip {
  height: 235px;
  line-height: 235px;
  margin: 0 5px;
}

.picker {
  width: 100vw;
  height: 100vh;
  top: 0;
  left: 0;
  z-index: 12;
}

.picker .picker-action {
  height: 36px;
  bottom: 235px;
  padding: 0 15px;
  width: 100%;
  display: flex;
  align-items: center;
  position: absolute;
  background: #fff;
  box-sizing: border-box;
  border-bottom: 1rpx solid #e5e5e5;
  justify-content: space-between;
}
.picker-action view:last-child {
  color: #1aad16;
}

.picker picker-view {
  position: absolute;
  bottom: 0;
  background: #fff;
  width: 100vw;
}
</style>

<template>
  <import src="../assets/datetime_picker/date-picker-view.wxml">

  <view wx:if="{{ !pickerView }}" @tap="showPicker" class="placeholder-class">{{text || placeholder}}</view>

  <view wx:if="{{ pickerView }}" class="picker-view"></view>
  <view wx:else>
    <pop-manager show="{{ show }}" type="bottom">
      <view class="picker">
        <view class="picker-action">
          <view data-action="cancel" @tap="hidePicker">取消</view>
          <view data-action="change" @tap="hidePicker">确认</view>
        </view>
        <template is="date-picker-view" data="{{ dataList, selected, use }}" />
      </view>
    </pop-manager>
  </view>
</template>

<script>
import wepy from 'wepy';
import DatePicker from '../assets/datetime_picker/date-picker.js';
import { moment } from '../assets/datetime_picker/utils.js';
import popManager from './popmanager';

export default class Datepicker extends wepy.component {
  props = {
    placeholder: {
      type: String,
      default: '请选择时间'
    },
    format: {
      type: String,
      value: 'YYYY-MM-DD HH:mm:ss'
    },
    pickerView: {
      type: Boolean
    },
    date: {
      type: String,
      // observer 表示属性值被更改时的响应函数
      observer: function observer(value) {
        if (value === {}.toString()) {
          throw new Error('参数必须是一个字符串');
        }
        if (/^[0-9]+$/.test(value)) {
          value = +value;
        }
        this.updateDate(value);
      }
    }
  }

  components = {
    'pop-manager': popManager
  }
}
</script>
