<style lang="css">
@import '../espui/panel.wxss';
@import '../espui/btn.wxss';
.field__title--radius {
  padding-bottom: 10px;
}
</style>

<template>
<view class="container">
  <view class="doc-title esp-hairline-bottom">Field</view>

  <!-- Field 基础用法 -->
  <view class="esp-panel-title">基础用法</view>
  <view class="esp-panel">
    <espField1 :options="base_name" :value="value" triggerChange="handleChange" componentId="espField1"></espField1>
    <espField2 :options="base_tel" :value="value" triggerFocus="handleFocus" componentId="espField2"></espField2>
    <espField3 :options="base_address" :value="value" triggerBlur="handleFocus" componentId="espField3"></espField3>
  </view>

  <view class="esp-btns">
    <button
      class="esp-btn esp-btn-primary"
      bindtap="clearInput">清除输入</button>
  </view>

  <!-- 去除标题后的输入框样式 -->
  <view class="esp-panel-title">无标题输入框</view>
  <view class="esp-panel">
    <espField4 :options="notitle" :value="textareaValue" componentId="espField4"></espField4>
  </view>

  <view class="esp-btns">
    <button
      class="esp-btn esp-btn-primary"
      bindtap="clearTextarea">清除输入</button>
  </view>

  <!-- 使用 Field 圆角样式 -->
  <view class="esp-panel-title field__title--radius">圆角输入框</view>
  <espField5 :options="radius_totalPrice" componentId="espField5"></espField5>
  <espField6 :options="radius_excludePrice" componentId="espField6"></espField6>
  <espField7 :options="radius_notitle" componentId="espField7"></espField7>

  <!-- form 中使用 Field -->
  <view class="esp-panel-title">Form 表单中的field应用</view>
  <form bindsubmit="formSubmit" bindreset="formReset">
    <view class="esp-panel">
      <espField8 :options="form_name" componentId="espField8"></espField8>
      <espField9 :options="form_tel" componentId="espField9"></espField9>
      <view class="esp-btns">
        <button
          class="esp-btn esp-btn-primary"
          formType="submit">提交数据</button>
        <button
          class="esp-btn"
          formType="reset">重置数据</button>
      </view>
    </view>
  </form>

  <view class="esp-panel-title">自定义显示内容</view>
  <view class="esp-panel">
    <view class="esp-cell esp-field">
      <view class="esp-cell-hd esp-field-title">选择区域</view>
      <picker
        mode="selector"
        class="esp-field-input esp-cell-bd"
        range="{{ area }}"
        value="{{ areaIndex }}"
        bindchange="onAreaChange"
      >
        {{ area[areaIndex] }}
      </picker>
    </view>

    <view class="esp-cell esp-field">
      <view class="esp-cell-hd esp-field-title">验证码</view>
      <input
        type="text"
        placeholder="请输入短信验证码"
        class="esp-field-input esp-cell-bd"/>
      <view class="esp-cell-ft">
        <button class="esp-btn esp-btn-mini esp-btn-primary">获取验证码</button>
      </view>
    </view>
  </view>
</view>
</template>

<script>
import wepy from 'wepy'
import espField from '../components/field'

export default class field extends wepy.page {
  config = {
    navigationBarTitleText: 'Field 输入框'
  }
  components = {
    espField1: espField,
    espField2: espField,
    espField3: espField,
    espField4: espField,
    espField5: espField,
    espField6: espField,
    espField7: espField,
    espField8: espField,
    espField9: espField,
  }
  data = {
    // 基础类型输入框配置
    base_name: {
      title: '收货人',
      placeholder: '名字'
    },
    base_tel: {
      error: true,
      title: '联系电话',
      inputType: 'number',
      placeholder: '请输入手机号'
    },
    base_address: {
      title: '详细地址',
      type: 'textarea',
      placeholder: '请输入详细地址'
    },
    // 无标题输入框
    notitle: {
      placeholder: '请输入收货人姓名',
      componentId: 'textarea:test'
    },
    // 圆角输入框
    radius_totalPrice: {
      right: true,
      mode: 'wrapped',
      title: '消费总额',
      inputType: 'number',
      placeholder: '询问收银员后输入'
    },
    radius_excludePrice: {
      right: true,
      error: true,
      mode: 'wrapped',
      title: '不参与优惠金额',
      inputType: 'number',
      placeholder: '询问收银员后输入'
    },
    radius_notitle: {
      mode: 'wrapped',
      inputType: 'number',
      placeholder: '请输入消费金额'
    },
    // Form 中使用输入框
    form_name: {
      name: 'name',
      placeholder: '请输入收货人姓名',
      componentId: 'form:test:name'
    },
    form_tel: {
      name: 'tel',
      inputType: 'tel',
      placeholder: '请输入收货人手机号码',
      componentId: 'form:test:tel'
    },
    value: 'test',
    textareaValue: 'test textarea',
    area: [
      '省份',
      '北京市',
      '天津市',
      '河北省',
      '山西省',
      '内蒙古自治区',
      '辽宁省',
      '吉林省',
      '黑龙江省',
      '上海市',
      '江苏省',
      '浙江省',
      '安徽省',
      '福建省',
      '江西省',
      '山东省',
      '河南省',
      '湖北省',
      '湖南省',
      '广东省',
      '广西壮族自治区',
      '海南省',
      '重庆市',
      '四川省',
      '贵州省',
      '云南省',
      '西藏自治区',
      '陕西省',
      '甘肃省',
      '青海省',
      '宁夏回族自治区',
      '新疆维吾尔自治区',
      '台湾省',
      '香港特别行政区',
      '澳门特别行政区'
    ],
    areaIndex: 0
  }
  methods = {
    onAreaChange(e) {
      this.areaIndex = e.detail.value
      this.$apply()
    },

    clearInput() {
      this.$invoke('espField1', 'clear')
      this.$invoke('espField2', 'clear')
      this.$invoke('espField3', 'clear')
    },

    clearTextarea() {
      this.$invoke('espField4', 'clear')
    },

    formSubmit(event) {
      console.log('[esp:field:submit]', event.detail.value)
    },

    formReset(event) {
      console.log('[esp:field:reset]', event)
    }
  }
  events = {
    handleChange(e) {
      const { componentId, detail } = e

      console.log('[change]', componentId, detail)
    },

    handleFocus(e) {
      const { componentId, detail } = e

      console.log('[focus]', componentId, detail)
    },

    handleBlur(e) {
      const { componentId, detail } = e

      console.log('[blur] ' + componentId, detail);
    }
  }
  onLoad() {}
}
</script>
